version: "2.1"

defaults:
  only-tag-filter: &filter-only-tagged
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /.*/
  only-master-filter: &filter-only-master
    filters:
      branches:
        only: /master/
      tags:
        ignore: /.*/

executors:
  python-3-7:
    docker:
      - image: circleci/python:3.7

workflows:
  version: "2"
  build-workflow:  # PRs and merges to master
    jobs:
      - create-workspace
      - test:
          requires:
            - create-workspace
      - upload-coverage:
          <<: *filter-only-master
          requires:
            - test
#  release-workflow:  # gated to tags
#    jobs:
#      - create-workspace:
#          <<: *filter-only-tagged
#      - upload-python:
#          <<: *filter-only-tagged
#          requires: create-workspace
#          context: org-global
#      - upload-docker:
#          <<: *filter-only-tagged
#          requires: upload-python
#          context: org-global
#      - upload-docs:
#          <<: *filter-only-tagged
#          requires: create-workspace
#          context: org-global

jobs:
  create-workspace:  # create an environment and install requirements
    working_directory: ~/source
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - restore_cache:  # if we have a cached env, use it
          keys:
            - environment-cache-{{ checksum "setup.py" }}-v2
            - environment-cache-
      - run:
          name: Install dependencies
          command: |
            python -mvenv ~/workspace/env
            . ~/workspace/env/bin/activate
            pip install -e '.[dev]'
      - save_cache:  # cache the environment for reuse across builds
          paths:
            - ~/workspace/env
          key: environment-cache-{{ checksum "setup.py" }}-v2
      - persist_to_workspace:  # save it to the workspace for other jobs
          root: ~/workspace
          paths:
            - ./env

  test:  # run tests with coverage enabled
    working_directory: ~/source
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run tests
          command: |
            . ~/workspace/env/bin/activate
            mkdir -p build/reports
            yapf -dr docs/conf.py harserver tests > build/reports/yapf.diff
            nosetests \
              --with-coverage --cover-xml --cover-xml-file build/reports/coverage.xml \
              --with-xunit --xunit-file build/reports/nosetests.xml
            flake8 --output-file build/reports/pep8.txt harserver tests
            cp .coverage ~/workspace
      - persist_to_workspace:  # .coverage is needed by coveralls
          root: ~/workspace
          paths:
            - .coverage
      - store_artifacts:
          path: build/reports
          destination: build-reports

  upload-coverage:
    working_directory: ~/source
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          command: |
            . ~/workspace/env/bin/activate
            cp ~/workspace/.coverage .
            coveralls

#  upload-docker: {}
#  upload-docs: {}

#  upload-python:
#    working_directory: ~/source
#    docker:
#      - image: circleci/python:3.7
#    steps:
#      - attach_workspace:
#          at: ~/workspace
#      - run:
#          command: |
#            . ~/workspace/env/bin/activate
#            ./setup.py check sdist bdist_wheel
#            twine upload dist/*
